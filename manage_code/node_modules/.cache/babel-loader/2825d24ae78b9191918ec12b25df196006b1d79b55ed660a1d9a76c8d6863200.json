{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nvar _interopRequireDefault = require(\"/Users/xinxiao/Desktop/education_ai/manage_code/node_modules/@babel/runtime/helpers/interopRequireDefault.js\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nrequire(\"core-js/modules/es.json.stringify.js\");\nvar _regeneratorRuntime2 = _interopRequireDefault(require(\"/Users/xinxiao/Desktop/education_ai/manage_code/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/xinxiao/Desktop/education_ai/manage_code/node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _toolUtil = _interopRequireDefault(require(\"@/utils/toolUtil.js\"));\nvar _config = _interopRequireDefault(require(\"@/utils/config.js\"));\nvar _http = _interopRequireDefault(require(\"@/utils/http.js\"));\nvar _avatar = _interopRequireDefault(require(\"@/assets/img/avatar.png\"));\nvar _default = {\n  namespaced: true,\n  state: {\n    session: {},\n    username: '管理员',\n    avatar: ''\n  },\n  getters: {\n    session: function session(state) {\n      return state.session;\n    },\n    avatar: function avatar(state) {\n      var key;\n      if (_toolUtil[\"default\"].storageGet('sessionTable') == 'users') {\n        key = 'touxiang';\n      }\n      if (_toolUtil[\"default\"].storageGet('sessionTable') == 'jiaoshi') {\n        key = 'touxiang';\n      }\n      if (_toolUtil[\"default\"].storageGet('sessionTable') == 'xuesheng') {\n        key = 'touxiang';\n      }\n      var avatar = state.session[key];\n      state.avatar = avatar;\n      return avatar ? _config[\"default\"].get().url + avatar : _avatar[\"default\"];\n    }\n  },\n  actions: {\n    getSession: function getSession(_ref) {\n      return (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/(0, _regeneratorRuntime2[\"default\"])().mark(function _callee() {\n        var commit, res;\n        return (0, _regeneratorRuntime2[\"default\"])().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return _http[\"default\"].get(\"\".concat(_toolUtil[\"default\"].storageGet('sessionTable'), \"/session\"));\n            case 3:\n              res = _context.sent;\n              if (res.data.code == 0) {\n                commit('set_session', res.data.data);\n              }\n              return _context.abrupt(\"return\", res);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    update: function update(_ref2, data) {\n      return (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/(0, _regeneratorRuntime2[\"default\"])().mark(function _callee2() {\n        var commit, res;\n        return (0, _regeneratorRuntime2[\"default\"])().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return _http[\"default\"].post(\"\".concat(_toolUtil[\"default\"].storageGet('sessionTable'), \"/update\"), data);\n            case 3:\n              res = _context2.sent;\n              if (res.data.code == 0) {\n                commit('assign_session', data);\n              }\n              return _context2.abrupt(\"return\", res);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  mutations: {\n    set_session: function set_session(state, data) {\n      state.session = data;\n    },\n    assign_session: function assign_session(state, data) {\n      Object.assign(state.session, JSON.parse(JSON.stringify(data)));\n    }\n  }\n};\nexports[\"default\"] = _default;","map":{"version":3,"names":["namespaced","state","session","username","avatar","getters","key","toolUtil","storageGet","config","get","url","default_avatar","actions","getSession","commit","http","res","data","code","update","post","mutations","set_session","assign_session","Object","assign","JSON","parse","stringify"],"sources":["/Users/xinxiao/Desktop/education_ai/manage_code/src/store/modules/user.js"],"sourcesContent":["import toolUtil from '@/utils/toolUtil.js'\r\nimport config from '@/utils/config.js'\r\nimport http from '@/utils/http.js'\r\nimport default_avatar from \"@/assets/img/avatar.png\"\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state:{\r\n        session:{},\r\n        username:'管理员',\r\n        avatar:''\r\n    },\r\n    getters:{\r\n        session(state){\r\n            return state.session\r\n        },\r\n        avatar(state){\r\n            let key;\r\n            if(toolUtil.storageGet('sessionTable') == 'users'){\r\n                key = 'touxiang'\r\n            }\r\n            if(toolUtil.storageGet('sessionTable') == 'jiaoshi'){\r\n                key = 'touxiang'\r\n            }\r\n            if(toolUtil.storageGet('sessionTable') == 'xuesheng'){\r\n                key = 'touxiang'\r\n            }\r\n            let avatar = state.session[key]\r\n            state.avatar = avatar\r\n            return avatar?config.get().url+avatar:default_avatar\r\n        },\r\n    },\r\n    actions:{\r\n        async getSession({commit}){\r\n            let res = await http.get(`${toolUtil.storageGet('sessionTable')}/session`)\r\n            if(res.data.code==0){\r\n                commit('set_session',res.data.data)\r\n            }\r\n            return res\r\n        },\r\n        async update({commit},data){\r\n            let res = await http.post(`${toolUtil.storageGet('sessionTable')}/update`,data)\r\n            if(res.data.code==0){\r\n                commit('assign_session',data)\r\n            }\r\n            return res\r\n        },\r\n    },\r\n    mutations:{\r\n        set_session(state,data){\r\n            state.session = data\r\n        },\r\n        assign_session(state,data){\r\n            Object.assign(state.session,JSON.parse(JSON.stringify(data)))\r\n        },\r\n    }\r\n}"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAoD,eAErC;EACXA,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAC;IACFC,OAAO,EAAC,CAAC,CAAC;IACVC,QAAQ,EAAC,KAAK;IACdC,MAAM,EAAC;EACX,CAAC;EACDC,OAAO,EAAC;IACJH,OAAO,mBAACD,KAAK,EAAC;MACV,OAAOA,KAAK,CAACC,OAAO;IACxB,CAAC;IACDE,MAAM,kBAACH,KAAK,EAAC;MACT,IAAIK,GAAG;MACP,IAAGC,oBAAQ,CAACC,UAAU,CAAC,cAAc,CAAC,IAAI,OAAO,EAAC;QAC9CF,GAAG,GAAG,UAAU;MACpB;MACA,IAAGC,oBAAQ,CAACC,UAAU,CAAC,cAAc,CAAC,IAAI,SAAS,EAAC;QAChDF,GAAG,GAAG,UAAU;MACpB;MACA,IAAGC,oBAAQ,CAACC,UAAU,CAAC,cAAc,CAAC,IAAI,UAAU,EAAC;QACjDF,GAAG,GAAG,UAAU;MACpB;MACA,IAAIF,MAAM,GAAGH,KAAK,CAACC,OAAO,CAACI,GAAG,CAAC;MAC/BL,KAAK,CAACG,MAAM,GAAGA,MAAM;MACrB,OAAOA,MAAM,GAACK,kBAAM,CAACC,GAAG,EAAE,CAACC,GAAG,GAACP,MAAM,GAACQ,kBAAc;IACxD;EACJ,CAAC;EACDC,OAAO,EAAC;IACEC,UAAU,4BAAU;MAAA;QAAA;QAAA;UAAA;YAAA;cAARC,MAAM,QAANA,MAAM;cAAA;cAAA,OACJC,gBAAI,CAACN,GAAG,WAAIH,oBAAQ,CAACC,UAAU,CAAC,cAAc,CAAC,cAAW;YAAA;cAAtES,GAAG;cACP,IAAGA,GAAG,CAACC,IAAI,CAACC,IAAI,IAAE,CAAC,EAAC;gBAChBJ,MAAM,CAAC,aAAa,EAACE,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;cACvC;cAAC,iCACMD,GAAG;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACd,CAAC;IACKG,MAAM,yBAAUF,IAAI,EAAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAbH,MAAM,SAANA,MAAM;cAAA;cAAA,OACAC,gBAAI,CAACK,IAAI,WAAId,oBAAQ,CAACC,UAAU,CAAC,cAAc,CAAC,cAAUU,IAAI,CAAC;YAAA;cAA3ED,GAAG;cACP,IAAGA,GAAG,CAACC,IAAI,CAACC,IAAI,IAAE,CAAC,EAAC;gBAChBJ,MAAM,CAAC,gBAAgB,EAACG,IAAI,CAAC;cACjC;cAAC,kCACMD,GAAG;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACd;EACJ,CAAC;EACDK,SAAS,EAAC;IACNC,WAAW,uBAACtB,KAAK,EAACiB,IAAI,EAAC;MACnBjB,KAAK,CAACC,OAAO,GAAGgB,IAAI;IACxB,CAAC;IACDM,cAAc,0BAACvB,KAAK,EAACiB,IAAI,EAAC;MACtBO,MAAM,CAACC,MAAM,CAACzB,KAAK,CAACC,OAAO,EAACyB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACX,IAAI,CAAC,CAAC,CAAC;IACjE;EACJ;AACJ,CAAC;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}